{"version":3,"sources":["components/FilterSelect.js","img/spinner-1.gif","components/Loader.js","components/LoadMoreButton.js","components/PokemonCard.js","components/PokemonDetails.js","components/PokemonDetailsPage.js","App.js","reportWebVitals.js","index.js"],"names":["FilterSelect","handleSelect","pokemonList","useState","value","setValue","options","setOptions","useEffect","length","list","arr","result","forEach","el","types","push","type","name","Set","createSelectOptions","Box","direction","wrap","justify","alignSelf","Paragraph","Select","margin","left","onChange","option","Loader","Image","src","spiner","LoadMoreButton","handleLoadMore","Button","onClick","primary","size","label","PokemonCard","props","other","sprites","id","setPokemonId","pokemonImg","dream_world","front_default","formatString","str","toUpperCase","slice","title","className","width","border","background","height","Heading","level","textAlign","map","item","uniqid","PokemonDetails","stats","weight","moves","pokemonStats","reduce","acum","stat","base_stat","getPokemonStats","attack","defense","hp","PokemonDetailsPage","pokemonId","isFetching","setIsFetching","pokemonDetails","setPokemonDetails","fetchAndCathError","link","a","fetch","res","json","data","console","error","alert","fetchData","displayDetails","App","pokemonDataCurrentList","setPokemonDataCurrentList","filtredBy","setFiltredBy","nextPage","setNextPage","response","results","url","links","promises","Promise","all","next","getPokemonsUrl","Header","Main","pokemonFiltredList","filter","some","getFiltredPokemonList","pokemon","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Grommet","plain","document","getElementById"],"mappings":"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","file":"static/js/main.9a486837.chunk.js","sourcesContent":["import { Box, Paragraph, Select } from 'grommet';\r\nimport React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\n\r\nexport const FilterSelect = ({handleSelect, pokemonList}) => {\r\n  const [value, setValue] = useState('All');\r\n  const [options, setOptions] = useState(['All']);\r\n\r\n  const createSelectOptions = (arr) => {\r\n    const result = [];\r\n    arr.forEach((el) => {\r\n      el.types.forEach((el) => {\r\n        result.push(el.type.name);\r\n      });\r\n    });\r\n  \r\n    return [...new Set(result)];\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (pokemonList.length){\r\n      const list = createSelectOptions(pokemonList);\r\n      setOptions(['All', ...list]);\r\n    }\r\n    \r\n  },[pokemonList]);\r\n  return (\r\n    <Box direction='row' wrap={true} justify='center' alignSelf='center'>\r\n      <Paragraph >Filter by type</Paragraph>\r\n      <Select\r\n        margin={{left:'10px'}}\r\n        options={[...options]}\r\n        value={value}\r\n        onChange={({ option }) => {\r\n          setValue(option)\r\n          handleSelect(option)\r\n        }}\r\n      />\r\n     \r\n    </Box>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/spinner-1.4c0dabf6.gif\";","import { Box, Image } from 'grommet'\r\nimport React from 'react'\r\nimport spiner from '../img/spinner-1.gif'\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <Box alignSelf='center'>\r\n      <Image src={spiner}/>\r\n    </Box>\r\n  )\r\n}\r\n","import { Button } from 'grommet';\r\nimport React from 'react';\r\n\r\nexport const LoadMoreButton = ({handleLoadMore}) => {\r\n  return (\r\n    <Button \r\n      onClick={handleLoadMore} \r\n      alignSelf='center' \r\n      primary \r\n      size='medium'\r\n      margin='20px 0'\r\n      label='Load more'>\r\n\r\n    </Button>\r\n  )\r\n}\r\n","import { Box, Heading, Image } from 'grommet';\r\nimport uniqid from 'uniqid';\r\nimport React from 'react';\r\n\r\nexport const PokemonCard = (props) => {\r\n  const {name, types, sprites: other, id, setPokemonId} = props;\r\n  const pokemonImg = other.other.dream_world.front_default;\r\n  const formatString = (str) => str[0].toUpperCase() + str.slice(1);\r\n  \r\n  const title = formatString(name);\r\n  return (\r\n    <Box \r\n      onClick={()=> setPokemonId(id)}\r\n      className='pokemon-card'\r\n      width='250px'\r\n      margin='5px 2px'\r\n      border='all'\r\n      background='light-1'\r\n      justify='between'\r\n    >\r\n      <Box \r\n        className='card-img-container'\r\n        alignSelf='center'  \r\n      >\r\n        <Image height='100%' width='100%'  src={pokemonImg}/>\r\n      </Box>\r\n      <Box>\r\n        <Heading level='3' textAlign='center'>{title}</Heading>\r\n        <Box direction='row'>\r\n          {types.map((item) => \r\n            <Box \r\n              key={uniqid()}\r\n              className={`card-type-box ${item.type.name}`}\r\n            >\r\n              {formatString(item.type.name)}\r\n            </Box>)}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import { Box, Heading, Image } from 'grommet';\r\nimport React from 'react';\r\nimport uniqid from 'uniqid';\r\n\r\nexport const PokemonDetails = (props) => {\r\n  const {name, types, sprites: other, stats, weight, moves, id} = props;\r\n  const pokemonImg = other?.other.dream_world.front_default;\r\n  const formatString = (str) => str[0].toUpperCase() + str.slice(1);\r\n\r\n  const getPokemonStats = (stats = []) => {\r\n    return stats.reduce((acum, el) => {\r\n    return {\r\n      ...acum,\r\n      [el.stat.name]:el.base_stat,\r\n    };\r\n   },{});\r\n  };\r\n\r\n  const pokemonStats = getPokemonStats(stats);\r\n  const title = formatString(name);\r\n\r\n  return (\r\n    <Box \r\n      className='pokemon-details'\r\n      margin='5px 2px'\r\n      border='all'\r\n      background='light-1'\r\n      justify='between'\r\n    >\r\n      <Box \r\n        className='details-img-container'\r\n        alignSelf='center'  \r\n      >\r\n        <Image height='150px' width='100%' src={pokemonImg}/>\r\n      </Box>\r\n      <Box>\r\n        <Heading level='3' textAlign='center'>{title} #{id}</Heading>\r\n        <Box border='all' className='details-table-container'>\r\n          <Box  direction='row'>\r\n            <Box className='border-bottom' justify='center' width='70%' >Type</Box>\r\n            <Box width='30%' className='border-left border-bottom'>\r\n              {\r\n                types?.map((item) => \r\n                  <span \r\n                    className='details-type'\r\n                    key={uniqid()}\r\n                  >\r\n                    {formatString(item.type.name)}\r\n                  </span>)\r\n              }\r\n            </Box>\r\n          </Box>\r\n          <Box border='bottom' direction='row'>\r\n            <Box width='70%' >Attack</Box>\r\n            <Box width='30%' border='left'>{pokemonStats.attack}</Box>\r\n          </Box>\r\n          <Box border='bottom' direction='row'>\r\n            <Box width='70%' >Defense</Box>\r\n            <Box width='30%' border='left'>{pokemonStats.defense}</Box>\r\n          </Box>\r\n          <Box border='bottom' direction='row'>\r\n            <Box width='70%' >HP</Box>\r\n            <Box width='30%' border='left'>{pokemonStats.hp}</Box>\r\n          </Box>\r\n          <Box border='bottom' direction='row'>\r\n            <Box width='70%' >SP</Box>\r\n            <Box width='30%' border='left'>{pokemonStats['special-attack']}</Box>\r\n          </Box>\r\n          <Box border='bottom' direction='row'>\r\n            <Box width='70%' >SD</Box>\r\n            <Box width='30%' border='left'>{pokemonStats['special-defense']}</Box>\r\n          </Box>\r\n          <Box border='bottom' direction='row'>\r\n            <Box width='70%' >Speed</Box>\r\n            <Box width='30%' border='left'>{pokemonStats['speed']}</Box>\r\n          </Box>\r\n          <Box border='bottom' direction='row'>\r\n            <Box width='70%' >Weight</Box>\r\n            <Box width='30%' border='left'>{weight}</Box>\r\n          </Box>\r\n          <Box direction='row'>\r\n            <Box width='70%' >Total moves</Box>\r\n            <Box width='30%' border='left'>{moves.length}</Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import { Box,} from 'grommet';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Loader } from './Loader';\r\nimport { PokemonDetails } from './PokemonDetails';\r\n\r\n\r\nexport const PokemonDetailsPage = ({pokemonId}) => {\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [pokemonDetails, setPokemonDetails] = useState(null);\r\n\r\n  \r\n  async function fetchAndCathError(link) {\r\n    try{\r\n      setIsFetching(true);\r\n      const res = await fetch(link);\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    }\r\n    catch(err){\r\n      console.error(err);\r\n      alert('SWW');\r\n    }\r\n    finally{\r\n      setIsFetching(false);\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      if (pokemonId) {\r\n       const data = await fetchAndCathError(`https://pokeapi.co/api/v2/pokemon/${pokemonId}`)\r\n        setPokemonDetails(data);\r\n      }\r\n    }\r\n    fetchData();\r\n    \r\n  },[pokemonId])\r\n\r\n  const displayDetails = (pokemonDetails) => {\r\n    return pokemonDetails && pokemonId\r\n      ?  <PokemonDetails {...pokemonDetails}/>\r\n      : <></>\r\n  }\r\n  return (\r\n    <Box className='details-container-wrapper'>\r\n      <Box \r\n      className='details-container'\r\n    >\r\n      {\r\n        isFetching \r\n          ? <Box className='pokemon-details'>\r\n              <Loader/>\r\n            </Box>\r\n          : displayDetails(pokemonDetails)\r\n      }\r\n    </Box>   \r\n    </Box>\r\n    \r\n  )\r\n}\r\n","import { Box, Header, Heading, Main } from 'grommet';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport { FilterSelect } from './components/FilterSelect';\nimport { Loader } from './components/Loader';\nimport { LoadMoreButton } from './components/LoadMoreButton';\nimport { PokemonCard } from './components/PokemonCard';\nimport { PokemonDetailsPage } from './components/PokemonDetailsPage';\n\nfunction App() {\n  const [pokemonDataCurrentList, setPokemonDataCurrentList] = useState([]);\n  const [filtredBy, setFiltredBy] = useState('All');\n\n  const [isFetching, setIsFetching] = useState(false);\n  const [nextPage, setNextPage] = useState('');\n  const [pokemonId, setPokemonId] = useState(null);\n\n  async function fetchAndCathError(link) {\n    try {\n      setIsFetching(true);\n      const res = await fetch(link);\n      const data = await res.json();\n\n      return data;\n    }\n    catch(err){\n      console.error(err);\n      alert('Something went wrong, try again later');\n    }\n    finally{\n      setIsFetching(false);\n    }\n  }\n\n  const handleLoadMore = async () => {\n    if (nextPage) {\n     const response = await fetchAndCathError(nextPage);\n     const links = await response?.results.map((el) => el.url);\n     const promises = links.map(async (link) => {\n      return await fetchAndCathError(link);\n    });\n    const data = await Promise.all(promises);\n\n    setPokemonDataCurrentList([...pokemonDataCurrentList, ...data]);\n    setNextPage(response.next);\n\n    }else {\n      alert(\"It's all pokemons\");\n    }\n  };\n\n  const handleSelect = (value) => {\n    setFiltredBy(value);\n  };\n\n  const getFiltredPokemonList = (filtredBy) => {\n    if (filtredBy === 'All') {\n\n      return pokemonDataCurrentList;\n    }\n    let pokemonFiltredList = pokemonDataCurrentList;\n    pokemonFiltredList = pokemonFiltredList.filter((el) => {\n     return el.types.some((el) => {\n       return el.type.name === filtredBy;\n      });\n    });\n\n    return pokemonFiltredList;\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      const getPokemonsUrl = (arr) => {\n        const data = arr?.map((item) => {\n          return fetchAndCathError(item.url);\n        });\n        return data;\n      };\n      const response = await fetchAndCathError('https://pokeapi.co/api/v2/pokemon/?limit=12');\n      setNextPage(response.next);\n      const list = await Promise.all(getPokemonsUrl(response?.results));\n      setPokemonDataCurrentList((list));\n    }\n\n    fetchData();\n    \n  },[]);\n  \n  return (\n    <Box className=\"App\">\n      <Header \n        width='100%'\n        background='brand'\n        justify='center' \n        className=\"App-header\">\n        <Heading>Pokedex</Heading>\n      </Header>\n      <Main direction='row'>\n        <Box className='pokemons-container'>\n          <FilterSelect pokemonList={pokemonDataCurrentList} handleSelect={handleSelect}/>\n          <Box justify='center' direction='row' wrap={true}>\n            {\n              getFiltredPokemonList(filtredBy).map((pokemon) => \n                <PokemonCard \n                  setPokemonId = {setPokemonId}\n                  key={pokemon.id} {...pokemon}/>)\n            }\n          </Box>\n            {\n            isFetching ?  <Loader/> : <LoadMoreButton handleLoadMore={handleLoadMore}/>\n            }\n        </Box>\n        <PokemonDetailsPage pokemonId={pokemonId}/>\n      </Main>\n    </Box>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Grommet } from 'grommet';\n\nReactDOM.render(\n  <Grommet plain>\n    <App />\n  </Grommet>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}