{"version":3,"sources":["components/FilterSelect.js","img/spinner-1.gif","components/Loader.js","helpers/formatString.js","components/PokemonCard.js","components/PokemonDetails.js","App.js","reportWebVitals.js","index.js"],"names":["FilterSelect","onSelect","optionsList","value","Box","direction","wrap","justify","alignSelf","Paragraph","Select","margin","left","options","onChange","option","Loader","Image","src","spiner","formatString","str","toUpperCase","slice","PokemonCard","props","name","types","sprites","setSelectedPokemon","onClick","pokemonImg","other","dream_world","front_default","title","className","width","border","background","height","Heading","level","textAlign","map","item","type","PokemonDetails","stats","weight","moves","id","pokemonStats","reduce","accum","el","stat","base_stat","getPokemonStats","attack","defense","hp","length","App","useState","pokemonList","setPokemonList","filteredBy","setFilteredBy","isFetching","setIsFetching","nextPage","setNextPage","selectedPokemon","makeRequest","link","a","fetch","res","json","data","console","error","alert","loadMore","response","results","url","links","promises","Promise","all","next","allOptions","pokemon","pokemonTypeNames","Set","useEffect","getPokemonsUrl","arr","list","fetchData","Header","Main","filter","some","getFilteredPokemonList","Button","primary","size","label","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Grommet","plain","document","getElementById"],"mappings":"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","file":"static/js/main.d3b53178.chunk.js","sourcesContent":["import { Box, Paragraph, Select } from 'grommet';\r\nimport React from 'react';\r\n\r\nexport const FilterSelect = ({onSelect, optionsList, value}) => {\r\n\r\n  return (\r\n    <Box direction='row' wrap={true} justify='center' alignSelf='center'>\r\n      <Paragraph >Filter by type</Paragraph>\r\n      <Select\r\n        margin={{left:'10px'}}\r\n        options={[...optionsList]}\r\n        value={value}\r\n        onChange={({ option }) => {\r\n          onSelect(option)\r\n        }}\r\n      />\r\n     \r\n    </Box>\r\n  )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/spinner-1.4c0dabf6.gif\";","import { Box, Image } from 'grommet'\r\nimport React from 'react'\r\nimport spiner from '../img/spinner-1.gif'\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <Box alignSelf='center'>\r\n      <Image src={spiner}/>\r\n    </Box>\r\n  )\r\n}\r\n","export const formatString = (str) => str[0].toUpperCase() + str.slice(1);\r\n","import { Box, Heading, Image } from 'grommet';\r\nimport { formatString } from '../helpers/formatString';\r\nimport React from 'react';\r\n\r\nexport const PokemonCard = (props) => {\r\n  const {name, types, sprites, onClick: setSelectedPokemon } = props;\r\n  const pokemonImg = sprites.other.dream_world.front_default;\r\n  const title = formatString(name);\r\n  return (\r\n    <Box \r\n      onClick={() => {\r\n        setSelectedPokemon(props)\r\n      }}\r\n      className='pokemon-card'\r\n      width='250px'\r\n      margin='5px 2px'\r\n      border='all'\r\n      background='light-1'\r\n      justify='between'\r\n    >\r\n      <Box \r\n        className='card-img-container'\r\n        alignSelf='center'  \r\n      >\r\n        <Image height='100%' width='100%'  src={pokemonImg}/>\r\n      </Box>\r\n      <Box>\r\n        <Heading level='3' textAlign='center'>{title}</Heading>\r\n        <Box direction='row'>\r\n          {types.map((item) => \r\n            <Box \r\n              key={item.type.name}\r\n              className={`card-type-box ${item.type.name}`}\r\n            >\r\n              {formatString(item.type.name)}\r\n            </Box>)}\r\n        </Box>\r\n      </Box>\r\n    </Box>\r\n  )\r\n}\r\n","import { Box, Heading, Image } from 'grommet';\r\nimport React from 'react';\r\nimport { formatString } from '../helpers/formatString';\r\n\r\nexport const PokemonDetails = (props) => {\r\n  const {name, types, sprites: other, stats, weight, moves, id} = props;\r\n  const pokemonImg = other?.other.dream_world.front_default;\r\n\r\n  const getPokemonStats = (stats) => {\r\n    return stats.reduce((accum, el) => {\r\n    return {\r\n      ...accum,\r\n      [el.stat.name]:el.base_stat,\r\n    };\r\n   },{});\r\n  };\r\n\r\n  const pokemonStats = getPokemonStats(stats);\r\n  const title = formatString(name);\r\n\r\n  return (\r\n    <Box className='details-container-wrapper'>\r\n      <Box className='details-container'>\r\n      <Box \r\n      className='pokemon-details'\r\n      margin='5px 2px'\r\n      border='all'\r\n      background='light-1'\r\n      justify='between'\r\n      >\r\n      <Box \r\n        className='details-img-container'\r\n        alignSelf='center'  \r\n      >\r\n        <Image height='150px' width='100%' src={pokemonImg}/>\r\n      </Box>\r\n        <Box>\r\n          <Heading level='3' textAlign='center'>{title} #{id}</Heading>\r\n          <Box border='all' className='details-table-container'>\r\n            <Box  direction='row'>\r\n              <Box className='border-bottom' justify='center' width='70%' >Type</Box>\r\n              <Box width='30%' className='border-left border-bottom'>\r\n                {\r\n                  types?.map((item) => \r\n                    <span \r\n                      className='details-type'\r\n                      key={item.type.name}\r\n                    >\r\n                      {formatString(item.type.name)}\r\n                    </span>)\r\n                }\r\n              </Box>\r\n            </Box>\r\n            <Box border='bottom' direction='row'>\r\n              <Box width='70%' >Attack</Box>\r\n              <Box width='30%' border='left'>{pokemonStats.attack}</Box>\r\n            </Box>\r\n            <Box border='bottom' direction='row'>\r\n              <Box width='70%' >Defense</Box>\r\n              <Box width='30%' border='left'>{pokemonStats.defense}</Box>\r\n            </Box>\r\n            <Box border='bottom' direction='row'>\r\n              <Box width='70%' >HP</Box>\r\n              <Box width='30%' border='left'>{pokemonStats.hp}</Box>\r\n            </Box>\r\n            <Box border='bottom' direction='row'>\r\n              <Box width='70%' >SP</Box>\r\n              <Box width='30%' border='left'>{pokemonStats['special-attack']}</Box>\r\n            </Box>\r\n            <Box border='bottom' direction='row'>\r\n              <Box width='70%' >SD</Box>\r\n              <Box width='30%' border='left'>{pokemonStats['special-defense']}</Box>\r\n            </Box>\r\n            <Box border='bottom' direction='row'>\r\n              <Box width='70%' >Speed</Box>\r\n              <Box width='30%' border='left'>{pokemonStats['speed']}</Box>\r\n            </Box>\r\n            <Box border='bottom' direction='row'>\r\n              <Box width='70%' >Weight</Box>\r\n              <Box width='30%' border='left'>{weight}</Box>\r\n            </Box>\r\n            <Box direction='row'>\r\n              <Box width='70%' >Total moves</Box>\r\n              <Box width='30%' border='left'>{moves.length}</Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n      </Box>   \r\n    </Box>\r\n    \r\n  )\r\n}\r\n","import { Box, Button, Header, Heading, Main } from 'grommet';\r\nimport { useEffect, useState } from 'react';\r\nimport './App.css';\r\nimport { FilterSelect } from './components/FilterSelect';\r\nimport { Loader } from './components/Loader';\r\nimport { PokemonCard } from './components/PokemonCard';\r\nimport { PokemonDetails } from './components/PokemonDetails';\r\n\r\nfunction App() {\r\n  const [pokemonList, setPokemonList] = useState([]);\r\n  const [filteredBy, setFilteredBy] = useState('All');\r\n\r\n  const [isFetching, setIsFetching] = useState(false);\r\n  const [nextPage, setNextPage] = useState('');\r\n  const [selectedPokemon, setSelectedPokemon] = useState();\r\n\r\n  async function makeRequest(link) {\r\n    try {\r\n      setIsFetching(true);\r\n      const res = await fetch(link);\r\n      const data = await res.json();\r\n\r\n      return data;\r\n    }\r\n    catch(err){\r\n      console.error(err);\r\n      alert('Something went wrong, try again later');\r\n    }\r\n    finally{\r\n      setIsFetching(false);\r\n    }\r\n  }\r\n\r\n  const loadMore = async () => {\r\n    if (!nextPage) {\r\n      alert(\"It's all pokemons\");\r\n\r\n      return\r\n    }\r\n\r\n    const response = await makeRequest(nextPage);\r\n    const links = await response?.results.map((el) => el.url);\r\n    const promises = links.map(makeRequest);\r\n    const data = await Promise.all(promises);\r\n\r\n    setPokemonList([...pokemonList, ...data]);\r\n    setNextPage(response.next);\r\n  };\r\n\r\n  const getFilteredPokemonList = (filteredBy) => {\r\n    if (filteredBy === 'All') {\r\n\r\n      return pokemonList;\r\n    }\r\n    const pokemonFilteredList = pokemonList.filter((el) => el.types.some((el) => el.type.name === filteredBy));\r\n  \r\n    return pokemonFilteredList;\r\n  };\r\n\r\n    const allOptions = pokemonList.reduce((accum, pokemon) => {\r\n      const pokemonTypeNames = pokemon.types.map(el => el.type.name);\r\n      return [...accum, ...pokemonTypeNames]\r\n    },[]);\r\n\r\n  const optionsList = ['All', ...new Set(allOptions)];\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const getPokemonsUrl = (arr) => arr?.map((item) => makeRequest(item.url));\r\n      const POKEMONS_PER_PAGE = 12;\r\n      const response = await makeRequest(`https://pokeapi.co/api/v2/pokemon/?limit=${POKEMONS_PER_PAGE}`);\r\n      setNextPage(response.next);\r\n      const list = await Promise.all(getPokemonsUrl(response?.results));\r\n      setPokemonList(list);\r\n    }\r\n\r\n    fetchData();\r\n  },[]);\r\n  \r\n  return (\r\n    <Box className=\"App\">\r\n      <Header \r\n        width=\"100%\"\r\n        background=\"brand\"\r\n        justify=\"center\" \r\n        className=\"App-header\">\r\n        <Heading>Pokedex</Heading>\r\n      </Header>\r\n      <Main direction=\"row\">\r\n        <Box className=\"pokemons-container\">\r\n          <FilterSelect \r\n            optionsList={optionsList} \r\n            onSelect={setFilteredBy}\r\n            value={filteredBy}\r\n          />\r\n          <Box justify=\"center\" direction=\"row\" wrap={true}>\r\n            {\r\n              getFilteredPokemonList(filteredBy).map((pokemon) => \r\n                <PokemonCard \r\n                  onClick = {setSelectedPokemon}\r\n                  key={pokemon.id} {...pokemon}/>)\r\n            }\r\n          </Box>\r\n            {\r\n            isFetching \r\n              ? <Loader/> \r\n              : <Button \r\n                  onClick={loadMore} \r\n                  alignSelf=\"center\" \r\n                  primary \r\n                  size=\"medium\"\r\n                  margin=\"20px 0\"\r\n                  label=\"Load more\">\r\n                </Button>\r\n            }\r\n        </Box>\r\n       { selectedPokemon ? <PokemonDetails {...selectedPokemon}/> : <></> }\r\n      </Main>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Grommet } from 'grommet';\n\nReactDOM.render(\n  <Grommet plain>\n    <App />\n  </Grommet>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}